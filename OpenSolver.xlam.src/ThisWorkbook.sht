VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "ThisWorkbook"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Option Explicit

'====================================================================
' Excel 2003 Menu Code
' Provided by Paul Becker of Eclipse Engineering (www.eclipseeng.com)
'====================================================================
Private Sub Workbook_AddinInstall()
1         AlterMenuItems (True)
End Sub

Private Sub Workbook_AddinUninstall()
2         AlterMenuItems (False)
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
          If Not ThisWorkbook.Saved Then
              Dim Answer As VbMsgBoxResult
              Answer = MsgBox(ThisWorkbook.Name & " is unsaved. Save?", _
                              vbExclamation + vbYesNoCancel, "Unsaved Addin")
              If Answer = vbYes Then
                  ThisWorkbook.Save
              ElseIf Answer = vbNo Then
                  ' Do nothing special and proceed as normal
              Else
                  ' Not yes or no - should be cancel, but we just abort the close either way
                  Cancel = True
                  Exit Sub
              End If
          End If
    
          On Error Resume Next
3         AlterMenuItems (False)
          DeleteTempFolder
          On Error GoTo 0
End Sub

Private Sub Workbook_Open()
4         AlterMenuItems (True)
End Sub
'====================================================================
' Excel 2003 Menu Code
' Provided by Paul Becker of Eclipse Engineering (www.eclipseeng.com)
'====================================================================

'====================================================================
' Excel Code Exporter by Mike Woodhouse
' Released under MIT License at https://xlvbadevtools.codeplex.com/
'====================================================================
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

14        If MsgBox("Export VBA Code?", vbYesNo, "Before you go") = vbYes Then
15            ExportVBACode
              CreateRibbonXML
16        End If

          If MsgBox("Close all VB windows? Do this before release!", vbYesNo, "Before you go") = vbYes Then
              CloseAllVBEWindows
          End If
End Sub

Sub CloseAllVBEWindows()
    Dim i As Long
    With Application.VBE.Windows
        For i = .Count To 1 Step -1
            ' Window types:
            '   0 - Code
            '   1 - Form
            '   2 - Object Browser
            '   3 - Watches
            '   4 - Locals
            '   5 - Immediates
            '   6 - Project Explorer
            '   7 - Properties
            If .Item(i).Type < 2 Then .Item(i).Close
        Next i
    End With
End Sub

Public Sub ExportVBACode()

17        With New CodeExporter
18            Set .SourceWorkbook = ThisWorkbook
19            .ExportTo exportPath
20        End With

End Sub

Private Function exportPath() As String

21        exportPath = ThisWorkbook.FullName & ".src"
22        If Not FileOrDirExists(exportPath) Then
              ' Modification JWD: We need late binding on FSO here to avoid a dependence on Microsoft Scripting Runtime
              Dim fso As Object ' FileSystemObject
23            Set fso = CreateObject("Scripting.FileSystemObject")
24            fso.GetFolder(ThisWorkbook.Path).SubFolders.Add (ThisWorkbook.Name & ".src")
25        End If
              

End Function
'====================================================================
' Excel Code Exporter by Mike Woodhouse
' Released under MIT License at https://xlvbadevtools.codeplex.com/
'====================================================================
