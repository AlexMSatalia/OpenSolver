<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui">
  <ribbon startFromScratch="false">
    <tabs>
      <tab idMso="TabData">
        <group id="GroupOpenSolver" label="OpenSolver">
          <splitButton id="OpenSolverModelSB" size="large">
            <button id="OpenSolverModel" label="&amp;Model" onAction="OpenSolver_ModelClick" screentip="Build and edit OpenSolver models" supertip="Build or edit your optimization model. Will detect and load any pre-existing model and will save the results to the sheet." image="model"/>
            <menu id="OpenSolverModelMenu" itemSize="normal">
              <button id="OpenSolverModel2" label="&amp;Model..." onAction="OpenSolver_ModelClick" screentip="Build and edit OpenSolver models" supertip="Build or edit your optimization model. Will detect and load any pre-existing model and will save the results to the sheet."/>
              <button id="OpenSolverQuickAutomodel" label="&amp;Quick AutoModel" onAction="OpenSolver_QuickAutoModelClick" screentip="Run AutoModel with default options" supertip="OpenSolver's AutoModel will analyze the current sheet and use the sheet's structure and formulae to build an optimization model automatically."/>
              <button id="OpenSolverModelAutoModel" label="&amp;AutoModel And Solve" onAction="OpenSolver_AutoModelAndSolveClick" screentip="Run AutoModel and then solve problem" supertip="Run AutoModel with the default options to build the problem automatically and then solve the resulting problem with the currently selected solver engine."/>
              <button id="OpenSolverChosenSolver" label="&amp;Solver Engine..." onAction="OpenSolver_SolverOptions" screentip="Select your solver" supertip="Choose your solver from the list of supported solvers."/>
              <button id="OpenSolverModelOptions" label="&amp;Options..." onAction="OpenSolver_ModelOptions" screentip="Set solve options" supertip="Set options such as linearity, non-negativity, max solve time, and tolerance."/>
            </menu>
          </splitButton>
          <splitButton id="OpenSolverSolveSB" size="large">
            <button id="OpenSolverSolve" label="&amp;Solve" onAction="OpenSolver_SolveClickHandler" screentip="Solve optimization model" supertip="Solve an existing model on the active worksheet by constructing the model's equations and then calling the current chosen optimization engine." image="solve"/>
            <menu id="OpenSolverSolveMenu" itemSize="normal">
              <button id="OpenSolverSolve2" label="&amp;Solve" onAction="OpenSolver_SolveClickHandler" screentip="Solve optimization model" supertip="Solve an existing model on the active worksheet by constructing the model's equations and then calling the current chosen optimization engine."/>
              <button id="OpenSolverSolveRelaxation" label="Solve &amp;Relaxation" onAction="OpenSolver_SolveRelaxationClickHandler" screentip="Solve a modified problem without any integer or binary constraints" supertip="Relaxes any integer or binary requirements on the variables, and solves the resulting linear program, typically giving an answer with fractional variables."/>
            </menu>
          </splitButton>
          <button id="OpenSolverShowModel" label="Show/&amp;Hide Model" onAction="OpenSolver_ShowHideModelClickHandler" screentip="Show or hide the optimization model on this sheet" supertip="OpenSolver will analyze an existing model on the active sheet, and add coloured annotations to the sheet that indicate the variable cells, the objective cell, and the constraints."/>
          <button id="OpenSolverQuickSolve" label="&amp;Quick Solve" onAction="OpenSolver_QuickSolveClickHandler" screentip="Quickly re-solve a model after changing the parameter values" supertip="OpenSolver can re-solve problems very quickly if it is first told about the cells (termed parameters) that change between solves. The Quick Solve menu items below can be used to set this up for your model."/>
          <menu id="menu" label="&amp;OpenSolver">
            <menuSeparator id="separator0" title="QuickSolve Options"/>
            <button id="OpenSolverInitParameters" label="Set QuickSolve Parameters..." onAction="OpenSolver_SetQuickSolveParametersClickHandler" screentip="Define the parameter cells for QuickSolve" supertip="OpenSolver can re-solve problems very quickly if it is first told about the cells (termed parameters) that change between solves. This menu item lets you define the parameter cells. Note that OpenSolver assumes these parameters change the model's constraint right hand sides in a linear fashion."/>
            <button id="OpenSolverInitQuicksolve" label="Initialize QuickSolve" onAction="OpenSolver_InitQuickSolveClickHandler" screentip="Construct the model's equations and prepare for QuickSolve" supertip="OpenSolver can re-solve problems very quickly if it is first told about the cells (termed parameters) that change between solves. After you have defined the parameter cells, this menu item constructs the model's equations ready for quick solving."/>
            <menuSeparator id="separator1" title="Temporary Files"/>
            <button id="OpenSolverViewModel" label="View Last Model File" onAction="OpenSolver_ViewLastModelClickHandler" screentip="View the model file created when OpenSolver last solved a model" supertip="For some solvers, OpenSolver writes the model to a temporary text file that is read by the solver. It is often useful to load and view this file."/>
            <button id="OpenSolverViewSolution" label="View Last Solution File" onAction="OpenSolver_ViewLastSolutionClickHandler" screentip="View the last solution file" supertip="When a model is solved, a temporary solution file can be created by the solver containing the solution to the optimization problem. It is sometimes useful to load and view this file."/>
            <button id="OpenSolverViewSolverLogFile" label="View Last Solve Log File" onAction="OpenSolver_ViewSolverLogFileClickHandler" screentip="View the last solve log file" supertip="OpenSolver creates a log file every time a model is solved. The log file contains output from the solver, such as iteration details during the solve, which can give you more information about your model."/>
            <button id="OpenSolverViewErrorLogFile" label="View Last Error Log File" onAction="OpenSolver_ViewErrorLogFileClickHandler" screentip="View the last error log file" supertip="OpenSolver creates a log file every time an error occurs with detailed information about the error."/>
            <button id="OpenSolverViewTempFolder" label="View All OpenSolver Files..." onAction="OpenSolver_ViewTempFolderClickHandler" screentip="View all temporary OpenSolver files" supertip="Opens the folder containing all files created while using OpenSolver."/>
            <button id="OpenSolverLaunchCBC" label="Open Last Model in CBC..." onAction="OpenSolver_LaunchCBCCommandLine" screentip="Open the CBC command line, and load in the last model." supertip="Open the CBC optimizer at the command line, and load in the last model solved by OpenSolver. Type '?' at the CBC command line to get help on the CBC commands, and 'exit' to quit CBC. Note that any solutions generated are discarded; they are not loaded back into your spreadsheet."/>
            <menuSeparator id="separator2" title="About"/>
            <button id="OpenSolverAbout" label="About OpenSolver..." onAction="OpenSolver_AboutClickHandler"/>
            <button id="OpenSolverAboutCoinOR" label="About COIN-OR..." onAction="OpenSolver_AboutCoinOR"/>
            <menuSeparator id="separator3" title="Help"/>
            <button id="OpenSolverVisitOpenSolverOrg" label="Open OpenSolver.org" onAction="OpenSolver_VisitOpenSolverOrg"/>
            <button id="OpenSolverVisitCoinOROrg" label="Open COIN-OR.org" onAction="OpenSolver_VisitCoinOROrg"/>
          </menu>
        </group>
      </tab>
    </tabs>
  </ribbon>
</customUI>
